name: Test
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install dependencies
        run: sudo apt-get install build-essential
      - name: Run Test
        run: make test
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

  pretest:
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.set-matrix.outputs.plugins }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: set-matrix
        run: |
          echo "plugins=$(find plugins -mindepth 2 -maxdepth 2 -type d | sed 's/plugins\///' | awk 'BEGIN{printf "["} {printf "%s\"%s\"",sep,$0; sep=","} END{print ",\".\"]"}')" >> $GITHUB_OUTPUT

  plugins:
    needs: pretest
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' || 
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        plugins: ${{ fromJson(needs.pretest.outputs.plugins) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install dependencies
        run: sudo apt-get install build-essential
      - name: Run Test
        run: make test-plugins PLUGIN=${{ matrix.plugins }}
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-plugins
          path: coverage-plugins*.out

  coverage:
    runs-on: ubuntu-latest
    needs: [test, plugins]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Download coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Download plugins coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage-plugins
      - name: Install goveralls and send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@v0.0.11
          goveralls -coverprofile=$(ls -1 coverage*.out | paste -sd "," -) -service=github
