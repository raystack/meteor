// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: odpf/assets/v1beta2/table.proto

package assetsv1beta2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Table is a table in a database.
// It can be a file, a table, a view, a materialized view, a temporary table, or a virtual table.
type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metrics about the table.
	// For example check the profile schem.
	Profile *TableProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	// The columns of the table.
	// Example: 'id', `name`, `age'.
	Columns []*Column `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	// preview_fields of the table.
	PreviewFields []string `protobuf:"bytes,3,rep,name=preview_fields,json=previewFields,proto3" json:"preview_fields,omitempty"`
	// preview_rows is a multidimensional array containing preview of table
	PreviewRows *structpb.ListValue `protobuf:"bytes,4,opt,name=preview_rows,json=previewRows,proto3" json:"preview_rows,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_odpf_assets_v1beta2_table_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetProfile() *TableProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Table) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Table) GetPreviewFields() []string {
	if x != nil {
		return x.PreviewFields
	}
	return nil
}

func (x *Table) GetPreviewRows() *structpb.ListValue {
	if x != nil {
		return x.PreviewRows
	}
	return nil
}

// TableProfile is the metrics about the table.
type TableProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of rows in the table.
	// Example: `100`.
	TotalRows int64 `protobuf:"varint,1,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	// The number of rows in the table that are not deleted.
	// Example: `event_timestamp`.
	PartitionKey   string `protobuf:"bytes,2,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	PartitionValue string `protobuf:"bytes,3,opt,name=partition_value,json=partitionValue,proto3" json:"partition_value,omitempty"`
	// The number of how many times table is being used
	UsageCount int64 `protobuf:"varint,4,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	// The information of `join` applied to the table
	CommonJoins []*TableCommonJoin `protobuf:"bytes,5,rep,name=common_joins,json=commonJoins,proto3" json:"common_joins,omitempty"`
	// The information of `filter` applied to the table
	Filters []string `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *TableProfile) Reset() {
	*x = TableProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableProfile) ProtoMessage() {}

func (x *TableProfile) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableProfile.ProtoReflect.Descriptor instead.
func (*TableProfile) Descriptor() ([]byte, []int) {
	return file_odpf_assets_v1beta2_table_proto_rawDescGZIP(), []int{1}
}

func (x *TableProfile) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *TableProfile) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *TableProfile) GetPartitionValue() string {
	if x != nil {
		return x.PartitionValue
	}
	return ""
}

func (x *TableProfile) GetUsageCount() int64 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *TableProfile) GetCommonJoins() []*TableCommonJoin {
	if x != nil {
		return x.CommonJoins
	}
	return nil
}

func (x *TableProfile) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Join is the metric of which are other tables that are joined with this table
type TableCommonJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urn string `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	// The number of how many times table is being joined with a certain table urn
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The information of `join conditions` applied to the table
	Conditions []string `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *TableCommonJoin) Reset() {
	*x = TableCommonJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCommonJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCommonJoin) ProtoMessage() {}

func (x *TableCommonJoin) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCommonJoin.ProtoReflect.Descriptor instead.
func (*TableCommonJoin) Descriptor() ([]byte, []int) {
	return file_odpf_assets_v1beta2_table_proto_rawDescGZIP(), []int{2}
}

func (x *TableCommonJoin) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

func (x *TableCommonJoin) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TableCommonJoin) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// Column represents a column in a table or a file.
type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the column.
	// Example: `customer_id`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the column.
	// Example: `The unique id of the customer`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DataType    string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	// The format of the column.
	// Example: `true`.
	IsNullable bool `protobuf:"varint,4,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	// The length of the column.
	// Example: `10`.
	Length int64 `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	// The profile of the column.
	Profile *ColumnProfile `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	// Representation of the column properties.
	// Properties facet can be used to set custom properties, tags and labels for a column.
	Attributes *structpb.Struct `protobuf:"bytes,31,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_odpf_assets_v1beta2_table_proto_rawDescGZIP(), []int{3}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Column) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Column) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *Column) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Column) GetProfile() *ColumnProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Column) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ColumnProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min    string  `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max    string  `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	Avg    float64 `protobuf:"fixed64,3,opt,name=avg,proto3" json:"avg,omitempty"`
	Med    float64 `protobuf:"fixed64,4,opt,name=med,proto3" json:"med,omitempty"`
	Unique int64   `protobuf:"varint,5,opt,name=unique,proto3" json:"unique,omitempty"`
	Count  int64   `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	Top    string  `protobuf:"bytes,7,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *ColumnProfile) Reset() {
	*x = ColumnProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnProfile) ProtoMessage() {}

func (x *ColumnProfile) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_assets_v1beta2_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnProfile.ProtoReflect.Descriptor instead.
func (*ColumnProfile) Descriptor() ([]byte, []int) {
	return file_odpf_assets_v1beta2_table_proto_rawDescGZIP(), []int{4}
}

func (x *ColumnProfile) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *ColumnProfile) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

func (x *ColumnProfile) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *ColumnProfile) GetMed() float64 {
	if x != nil {
		return x.Med
	}
	return 0
}

func (x *ColumnProfile) GetUnique() int64 {
	if x != nil {
		return x.Unique
	}
	return 0
}

func (x *ColumnProfile) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ColumnProfile) GetTop() string {
	if x != nil {
		return x.Top
	}
	return ""
}

var File_odpf_assets_v1beta2_table_proto protoreflect.FileDescriptor

var file_odpf_assets_v1beta2_table_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3b,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x6f, 0x77, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a, 0x0f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x42, 0x51, 0x0a,
	0x0e, 0x69, 0x6f, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42,
	0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x33, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x3b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_odpf_assets_v1beta2_table_proto_rawDescOnce sync.Once
	file_odpf_assets_v1beta2_table_proto_rawDescData = file_odpf_assets_v1beta2_table_proto_rawDesc
)

func file_odpf_assets_v1beta2_table_proto_rawDescGZIP() []byte {
	file_odpf_assets_v1beta2_table_proto_rawDescOnce.Do(func() {
		file_odpf_assets_v1beta2_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_odpf_assets_v1beta2_table_proto_rawDescData)
	})
	return file_odpf_assets_v1beta2_table_proto_rawDescData
}

var file_odpf_assets_v1beta2_table_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_odpf_assets_v1beta2_table_proto_goTypes = []interface{}{
	(*Table)(nil),              // 0: odpf.assets.v1beta2.Table
	(*TableProfile)(nil),       // 1: odpf.assets.v1beta2.TableProfile
	(*TableCommonJoin)(nil),    // 2: odpf.assets.v1beta2.TableCommonJoin
	(*Column)(nil),             // 3: odpf.assets.v1beta2.Column
	(*ColumnProfile)(nil),      // 4: odpf.assets.v1beta2.ColumnProfile
	(*structpb.ListValue)(nil), // 5: google.protobuf.ListValue
	(*structpb.Struct)(nil),    // 6: google.protobuf.Struct
}
var file_odpf_assets_v1beta2_table_proto_depIdxs = []int32{
	1, // 0: odpf.assets.v1beta2.Table.profile:type_name -> odpf.assets.v1beta2.TableProfile
	3, // 1: odpf.assets.v1beta2.Table.columns:type_name -> odpf.assets.v1beta2.Column
	5, // 2: odpf.assets.v1beta2.Table.preview_rows:type_name -> google.protobuf.ListValue
	2, // 3: odpf.assets.v1beta2.TableProfile.common_joins:type_name -> odpf.assets.v1beta2.TableCommonJoin
	4, // 4: odpf.assets.v1beta2.Column.profile:type_name -> odpf.assets.v1beta2.ColumnProfile
	6, // 5: odpf.assets.v1beta2.Column.attributes:type_name -> google.protobuf.Struct
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_odpf_assets_v1beta2_table_proto_init() }
func file_odpf_assets_v1beta2_table_proto_init() {
	if File_odpf_assets_v1beta2_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_odpf_assets_v1beta2_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_assets_v1beta2_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_assets_v1beta2_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCommonJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_assets_v1beta2_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_assets_v1beta2_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_odpf_assets_v1beta2_table_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_odpf_assets_v1beta2_table_proto_goTypes,
		DependencyIndexes: file_odpf_assets_v1beta2_table_proto_depIdxs,
		MessageInfos:      file_odpf_assets_v1beta2_table_proto_msgTypes,
	}.Build()
	File_odpf_assets_v1beta2_table_proto = out.File
	file_odpf_assets_v1beta2_table_proto_rawDesc = nil
	file_odpf_assets_v1beta2_table_proto_goTypes = nil
	file_odpf_assets_v1beta2_table_proto_depIdxs = nil
}
